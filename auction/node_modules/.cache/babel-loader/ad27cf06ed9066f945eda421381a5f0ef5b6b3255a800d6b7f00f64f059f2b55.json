{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Navbar from'./components/Navbar';import Footer from'./components/Footer';import Home from'./components/Home';import ListTicket from'./components/ListTicket';import Login from'./components/Login';import Profile from'./components/Profile';import EventsSection from'./components/EventsSection';import SignUp from'./components/SignUp';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);// Simulate login check by checking localStorage or any other logic\nuseEffect(()=>{const token=localStorage.getItem('jwtToken');// Assuming you store the token here\nif(token){setIsLoggedIn(true);}},[]);const handleLogout=()=>{localStorage.removeItem('jwtToken');// Remove token on logout\nlocalStorage.removeItem('userId');// Remove user ID as well\nsetIsLoggedIn(false);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navbar,{isLoggedIn:isLoggedIn,handleLogout:handleLogout}),\" \",/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/list-ticket\",element:/*#__PURE__*/_jsx(ListTicket,{})}),/*#__PURE__*/_jsx(Route,{path:\"/events\",element:/*#__PURE__*/_jsx(EventsSection,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(SignUp,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:isLoggedIn?/*#__PURE__*/_jsx(Profile,{}):/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})})]})}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navbar","Footer","Home","ListTicket","Login","Profile","EventsSection","SignUp","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","handleLogout","removeItem","children","className","path","element"],"sources":["/Users/hemantsharma/auction/auction/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport ListTicket from './components/ListTicket';\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport EventsSection from './components/EventsSection';\nimport SignUp from './components/SignUp';\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    // Simulate login check by checking localStorage or any other logic\n    useEffect(() => {\n        const token = localStorage.getItem('jwtToken'); // Assuming you store the token here\n        if (token) {\n            setIsLoggedIn(true);\n        }\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.removeItem('jwtToken'); // Remove token on logout\n        localStorage.removeItem('userId'); // Remove user ID as well\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar isLoggedIn={isLoggedIn} handleLogout={handleLogout} /> {/* Pass the login state and logout function */}\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<Home />} />\n                        <Route path=\"/list-ticket\" element={<ListTicket />} />\n                        <Route path=\"/events\" element={<EventsSection setIsLoggedIn={setIsLoggedIn} />} />\n                        <Route path=\"/login\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\n                        <Route path=\"/signup\" element={<SignUp setIsLoggedIn={setIsLoggedIn} />} />\n                        <Route path=\"/profile\" element={isLoggedIn ? <Profile /> : <Login setIsLoggedIn={setIsLoggedIn} />} />\n                    </Routes>\n                </main>\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAEnD;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAoB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAE;AAChD,GAAIF,KAAK,CAAE,CACPD,aAAa,CAAC,IAAI,CAAC,CACvB,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAM,CACvBF,YAAY,CAACG,UAAU,CAAC,UAAU,CAAC,CAAE;AACrCH,YAAY,CAACG,UAAU,CAAC,QAAQ,CAAC,CAAE;AACnCL,aAAa,CAAC,KAAK,CAAC,CACxB,CAAC,CAED,mBACIL,IAAA,CAACZ,MAAM,EAAAuB,QAAA,cACHT,KAAA,QAAKU,SAAS,CAAC,KAAK,CAAAD,QAAA,eAChBX,IAAA,CAACT,MAAM,EAACa,UAAU,CAAEA,UAAW,CAACK,YAAY,CAAEA,YAAa,CAAE,CAAC,IAAC,cAC/DT,IAAA,SAAAW,QAAA,cACIT,KAAA,CAACZ,MAAM,EAAAqB,QAAA,eACHX,IAAA,CAACX,KAAK,EAACwB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEd,IAAA,CAACP,IAAI,GAAE,CAAE,CAAE,CAAC,cACrCO,IAAA,CAACX,KAAK,EAACwB,IAAI,CAAC,cAAc,CAACC,OAAO,cAAEd,IAAA,CAACN,UAAU,GAAE,CAAE,CAAE,CAAC,cACtDM,IAAA,CAACX,KAAK,EAACwB,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEd,IAAA,CAACH,aAAa,EAACQ,aAAa,CAAEA,aAAc,CAAE,CAAE,CAAE,CAAC,cAClFL,IAAA,CAACX,KAAK,EAACwB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEd,IAAA,CAACL,KAAK,EAACU,aAAa,CAAEA,aAAc,CAAE,CAAE,CAAE,CAAC,cACzEL,IAAA,CAACX,KAAK,EAACwB,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEd,IAAA,CAACF,MAAM,EAACO,aAAa,CAAEA,aAAc,CAAE,CAAE,CAAE,CAAC,cAC3EL,IAAA,CAACX,KAAK,EAACwB,IAAI,CAAC,UAAU,CAACC,OAAO,CAAEV,UAAU,cAAGJ,IAAA,CAACJ,OAAO,GAAE,CAAC,cAAGI,IAAA,CAACL,KAAK,EAACU,aAAa,CAAEA,aAAc,CAAE,CAAE,CAAE,CAAC,EAClG,CAAC,CACP,CAAC,cACPL,IAAA,CAACR,MAAM,GAAE,CAAC,EACT,CAAC,CACF,CAAC,CAEjB,CAEA,cAAe,CAAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}